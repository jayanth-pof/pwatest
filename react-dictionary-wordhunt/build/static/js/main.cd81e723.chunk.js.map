{"version":3,"sources":["components/Definitions/Definitions.js","components/Footer/Footer.js","data/category.js","components/Header/Header.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Definitions","meanings","word","LightTheme","category","className","style","backgroundColor","borderRadius","src","phonetics","audio","controls","map","mean","item","definitions","def","color","definition","width","example","synonyms","s","Footer","marginTop","href","target","categories","value","label","Header","setCategory","setWord","setMeanings","darkTheme","createMuiTheme","palette","primary","main","type","handleText","debounce","text","ThemeProvider","theme","TextField","id","onChange","e","select","handleChange","countries","option","MenuItem","App","useState","setLightTheme","dictionaryApi","a","axios","get","data","console","log","useEffect","PurpleSwitch","withStyles","switchBase","grey","checked","track","Switch","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cd81e723.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Definitions.css\";\r\n\r\nconst Definitions = ({ meanings, word, LightTheme, category }) => {\r\n  return (\r\n    <div className=\"meanings\">\r\n      {/* audio---------------------------- */}\r\n      {meanings[0] && word && category === \"en\" && (\r\n        <audio\r\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\r\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\r\n          controls\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n      {/* audio---------------------------- */}\r\n\r\n      {word === \"\" ? (\r\n        <span className=\"subTitle\">Start by typing a word in search</span>\r\n      ) : (\r\n        meanings.map((mean) =>\r\n          mean.meanings.map((item) =>\r\n            item.definitions.map((def) => (\r\n              <div\r\n                className=\"singleMean\"\r\n                style={{\r\n                  backgroundColor: LightTheme ? \"#3b5360\" : \"white\",\r\n                  color: LightTheme ? \"white\" : \"black\",\r\n                }}\r\n              >\r\n                <b>{def.definition}</b>\r\n                <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\r\n                {def.example && (\r\n                  <span>\r\n                    <b>Example :</b> {def.example}\r\n                  </span>\r\n                )}\r\n                {def.synonyms && (\r\n                  <span>\r\n                    <b>Synonyms :</b> {def.synonyms.map((s) => `${s}, `)}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))\r\n          )\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Definitions;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <hr style={{ width: \"90%\", marginTop: 20 }} />\r\n      <span className=\"name\">\r\n       {\" \"}\r\n        <a href=\"https://www.youtube.com/c/RoadsideCoder\" target=\"__blank\">\r\n        \r\n        </a>\r\n      </span>\r\n      <div className=\"iconContainer\">\r\n        <a href=\"https://www.instagram.com/roadsidecoder/\" target=\"__blank\">\r\n          <i className=\"fab fa-instagram-square fa-2x\"></i>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/piyush-eon\" target=\"__blank\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n        </a>\r\n        <a href=\"https://www.youtube.com/c/RoadsideCoder\" target=\"__blank\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const categories = [\r\n  { value: \"English\", label: \"en\" },\r\n  { value: \"Hindi\", label: \"hi\" },\r\n  { value: \"Spanish\", label: \"es\" },\r\n  { value: \"French\", label: \"fr\" },\r\n  { value: \"Japanese\", label: \"ja\" },\r\n  { value: \"Russian\", label: \"ru\" },\r\n  { value: \"German\", label: \"de\" },\r\n  { value: \"Italian\", label: \"it\" },\r\n  { value: \"Korean\", label: \"ko\" },\r\n  { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n  { value: \"Arabic\", label: \"ar\" },\r\n  { value: \"Turkish\", label: \"tr\" },\r\n];\r\n\r\nexport default categories;\r\n","import { createMuiTheme, TextField, ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport countries from \"../../data/category\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst Header = ({\r\n  category,\r\n  setCategory,\r\n  setWord,\r\n  word,\r\n  setMeanings,\r\n  LightTheme,\r\n}) => {\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: LightTheme ? \"#000\" : \"#fff\",\r\n      },\r\n      type: LightTheme ? \"light\" : \"dark\",\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setCategory(e.target.value);\r\n    setWord(\"\");\r\n    setMeanings([]);\r\n  };\r\n\r\n    const handleText = debounce((text) => {\r\n    setWord(text);\r\n  }, 500);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"title\">{word ? word : \"Word Hunt\"}</span>\r\n      <div className=\"inputs\">\r\n        <ThemeProvider theme={darkTheme}>\r\n          <TextField\r\n            className=\"search\"\r\n            id=\"filled-basic\"\r\n            // value={word}\r\n            label=\"Search a Word\"\r\n            onChange={(e) => handleText(e.target.value)}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Language\"\r\n            value={category}\r\n            onChange={(e) => handleChange(e)}\r\n            className=\"select\"\r\n          >\r\n            {countries.map((option) => (\r\n              <MenuItem key={option.label} value={option.label}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </ThemeProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Container, Switch, withStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Definitions from \"./components/Definitions/Definitions\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nfunction App() {\r\n  const [word, setWord] = useState(\"\");\r\n  const [meanings, setMeanings] = useState([]);\r\n  const [category, setCategory] = useState(\"en\");\r\n  const [LightTheme, setLightTheme] = useState(false);\r\n\r\n  const dictionaryApi = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\r\n      );\r\n      setMeanings(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  console.log(meanings);\r\n\r\n  useEffect(() => {\r\n    dictionaryApi();\r\n    // eslint-disable-next-line\r\n  }, [word, category]);\r\n\r\n  const PurpleSwitch = withStyles({\r\n    switchBase: {\r\n      color: grey[50],\r\n      \"&$checked\": {\r\n        color: grey[900],\r\n      },\r\n      \"&$checked + $track\": {\r\n        backgroundColor: grey[500],\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        height: \"100vh\",\r\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\r\n        color: LightTheme ? \"black\" : \"white\",\r\n        transition: \"all 0.5s linear\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"md\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100vh\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\r\n        >\r\n          <span>{LightTheme ? \"Dark\" : \"Light\"} Mode</span>\r\n          <PurpleSwitch\r\n            checked={LightTheme}\r\n            onChange={() => setLightTheme(!LightTheme)}\r\n          />\r\n        </div>\r\n        <Header\r\n          setWord={setWord}\r\n          category={category}\r\n          setCategory={setCategory}\r\n          word={word}\r\n          setMeanings={setMeanings}\r\n          LightTheme={LightTheme}\r\n        />\r\n        {meanings && (\r\n          <Definitions\r\n            meanings={meanings}\r\n            word={word}\r\n            LightTheme={LightTheme}\r\n            category={category}\r\n          />\r\n        )}\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}